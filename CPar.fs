// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)

open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | QQ
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | PLUSONE
  | SUBONE
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | DO
  | FOR
  | SWITCH
  | CASE
  | UNTIL
  | DONE
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_QQ
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_PLUSONE
    | TOKEN_SUBONE
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_DO
    | TOKEN_FOR
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_UNTIL
    | TOKEN_DONE
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_SwitchStmt
    | NONTERM_SwitchStmt1
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | QQ  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | PLUSONE  -> 27 
  | SUBONE  -> 28 
  | CHAR  -> 29 
  | ELSE  -> 30 
  | IF  -> 31 
  | INT  -> 32 
  | NULL  -> 33 
  | PRINT  -> 34 
  | PRINTLN  -> 35 
  | RETURN  -> 36 
  | VOID  -> 37 
  | WHILE  -> 38 
  | DO  -> 39 
  | FOR  -> 40 
  | SWITCH  -> 41 
  | CASE  -> 42 
  | UNTIL  -> 43 
  | DONE  -> 44 
  | CSTSTRING _ -> 45 
  | NAME _ -> 46 
  | CSTINT _ -> 47 
  | CSTBOOL _ -> 48 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_QQ 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_PLUSONE 
  | 28 -> TOKEN_SUBONE 
  | 29 -> TOKEN_CHAR 
  | 30 -> TOKEN_ELSE 
  | 31 -> TOKEN_IF 
  | 32 -> TOKEN_INT 
  | 33 -> TOKEN_NULL 
  | 34 -> TOKEN_PRINT 
  | 35 -> TOKEN_PRINTLN 
  | 36 -> TOKEN_RETURN 
  | 37 -> TOKEN_VOID 
  | 38 -> TOKEN_WHILE 
  | 39 -> TOKEN_DO 
  | 40 -> TOKEN_FOR 
  | 41 -> TOKEN_SWITCH 
  | 42 -> TOKEN_CASE 
  | 43 -> TOKEN_UNTIL 
  | 44 -> TOKEN_DONE 
  | 45 -> TOKEN_CSTSTRING 
  | 46 -> TOKEN_NAME 
  | 47 -> TOKEN_CSTINT 
  | 48 -> TOKEN_CSTBOOL 
  | 51 -> TOKEN_end_of_input
  | 49 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_SwitchStmt 
    | 36 -> NONTERM_SwitchStmt 
    | 37 -> NONTERM_SwitchStmt1 
    | 38 -> NONTERM_SwitchStmt1 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_StmtU 
    | 42 -> NONTERM_StmtU 
    | 43 -> NONTERM_StmtU 
    | 44 -> NONTERM_StmtU 
    | 45 -> NONTERM_StmtU 
    | 46 -> NONTERM_Expr 
    | 47 -> NONTERM_Expr 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_AtExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_Access 
    | 73 -> NONTERM_Access 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Exprs 
    | 78 -> NONTERM_Exprs 
    | 79 -> NONTERM_Exprs1 
    | 80 -> NONTERM_Exprs1 
    | 81 -> NONTERM_Const 
    | 82 -> NONTERM_Const 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_Const 
    | 85 -> NONTERM_Type 
    | 86 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 51 
let _fsyacc_tagOfErrorTerminal = 49

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | QQ  -> "QQ" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | PLUSONE  -> "PLUSONE" 
  | SUBONE  -> "SUBONE" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | DO  -> "DO" 
  | FOR  -> "FOR" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | UNTIL  -> "UNTIL" 
  | DONE  -> "DONE" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | QQ  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | PLUSONE  -> (null : System.Object) 
  | SUBONE  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 12us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 58us; 54us; 59us; 54us; 64us; 54us; 66us; 54us; 80us; 54us; 98us; 54us; 104us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 5us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 58us; 108us; 104us; 105us; 10us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 58us; 46us; 59us; 60us; 64us; 65us; 66us; 67us; 80us; 81us; 98us; 99us; 104us; 45us; 1us; 65535us; 91us; 92us; 2us; 65535us; 91us; 101us; 105us; 106us; 10us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 58us; 47us; 59us; 107us; 64us; 109us; 66us; 110us; 80us; 116us; 98us; 122us; 104us; 47us; 44us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 56us; 57us; 58us; 48us; 59us; 48us; 62us; 63us; 64us; 48us; 66us; 48us; 69us; 70us; 74us; 75us; 76us; 77us; 78us; 79us; 80us; 48us; 82us; 83us; 84us; 85us; 88us; 89us; 95us; 96us; 98us; 48us; 104us; 48us; 112us; 113us; 117us; 118us; 119us; 120us; 129us; 130us; 132us; 157us; 135us; 136us; 137us; 138us; 158us; 142us; 159us; 143us; 160us; 144us; 161us; 145us; 162us; 146us; 163us; 147us; 164us; 148us; 165us; 149us; 166us; 150us; 167us; 151us; 168us; 152us; 169us; 153us; 170us; 155us; 172us; 154us; 183us; 156us; 186us; 157us; 44us; 65535us; 37us; 126us; 40us; 126us; 43us; 126us; 50us; 126us; 56us; 126us; 58us; 126us; 59us; 126us; 62us; 126us; 64us; 126us; 66us; 126us; 69us; 126us; 74us; 126us; 76us; 126us; 78us; 126us; 80us; 126us; 82us; 126us; 84us; 126us; 88us; 126us; 95us; 126us; 98us; 126us; 104us; 126us; 112us; 126us; 117us; 126us; 119us; 126us; 129us; 126us; 132us; 126us; 135us; 126us; 137us; 126us; 158us; 126us; 159us; 126us; 160us; 126us; 161us; 126us; 162us; 126us; 163us; 126us; 164us; 126us; 165us; 126us; 166us; 126us; 167us; 126us; 168us; 126us; 169us; 126us; 170us; 126us; 172us; 127us; 183us; 126us; 186us; 126us; 45us; 65535us; 37us; 128us; 40us; 128us; 43us; 128us; 50us; 128us; 56us; 128us; 58us; 128us; 59us; 128us; 62us; 128us; 64us; 128us; 66us; 128us; 69us; 128us; 74us; 128us; 76us; 128us; 78us; 128us; 80us; 128us; 82us; 128us; 84us; 128us; 88us; 128us; 95us; 128us; 98us; 128us; 104us; 128us; 112us; 128us; 117us; 128us; 119us; 128us; 129us; 128us; 132us; 128us; 135us; 128us; 137us; 128us; 158us; 128us; 159us; 128us; 160us; 128us; 161us; 128us; 162us; 128us; 163us; 128us; 164us; 128us; 165us; 128us; 166us; 128us; 167us; 128us; 168us; 128us; 169us; 128us; 170us; 128us; 172us; 128us; 180us; 182us; 183us; 128us; 186us; 128us; 47us; 65535us; 37us; 125us; 40us; 125us; 43us; 125us; 50us; 125us; 56us; 125us; 58us; 125us; 59us; 125us; 62us; 125us; 64us; 125us; 66us; 125us; 69us; 125us; 74us; 125us; 76us; 125us; 78us; 125us; 80us; 125us; 82us; 125us; 84us; 125us; 88us; 125us; 95us; 125us; 98us; 125us; 104us; 125us; 112us; 125us; 117us; 125us; 119us; 125us; 129us; 125us; 132us; 125us; 135us; 125us; 137us; 125us; 158us; 125us; 159us; 125us; 160us; 125us; 161us; 125us; 162us; 125us; 163us; 125us; 164us; 125us; 165us; 125us; 166us; 125us; 167us; 125us; 168us; 125us; 169us; 125us; 170us; 125us; 172us; 124us; 174us; 175us; 177us; 178us; 180us; 181us; 183us; 125us; 186us; 125us; 1us; 65535us; 132us; 133us; 2us; 65535us; 132us; 185us; 186us; 187us; 45us; 65535us; 37us; 171us; 40us; 171us; 43us; 171us; 50us; 171us; 56us; 171us; 58us; 171us; 59us; 171us; 62us; 171us; 64us; 171us; 66us; 171us; 69us; 171us; 74us; 171us; 76us; 171us; 78us; 171us; 80us; 171us; 82us; 171us; 84us; 171us; 88us; 171us; 95us; 171us; 98us; 171us; 104us; 171us; 112us; 171us; 117us; 171us; 119us; 171us; 129us; 171us; 132us; 171us; 135us; 171us; 137us; 171us; 158us; 171us; 159us; 171us; 160us; 171us; 161us; 171us; 162us; 171us; 163us; 171us; 164us; 171us; 165us; 171us; 166us; 171us; 167us; 171us; 168us; 171us; 169us; 171us; 170us; 171us; 172us; 171us; 180us; 171us; 183us; 171us; 186us; 171us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 46us; 50us; 56us; 67us; 69us; 72us; 83us; 128us; 173us; 219us; 267us; 269us; 272us; 318us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 39us; 1us; 23us; 16us; 24us; 32us; 44us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 14us; 26us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 26us; 1us; 27us; 3us; 28us; 39us; 40us; 3us; 28us; 39us; 40us; 16us; 28us; 39us; 40us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 3us; 28us; 39us; 40us; 2us; 28us; 39us; 1us; 28us; 2us; 29us; 41us; 2us; 29us; 41us; 15us; 29us; 41us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 2us; 29us; 41us; 1us; 29us; 2us; 30us; 42us; 1us; 30us; 1us; 30us; 1us; 30us; 14us; 30us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 30us; 1us; 30us; 2us; 31us; 43us; 2us; 31us; 43us; 15us; 31us; 43us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 2us; 31us; 43us; 15us; 31us; 43us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 2us; 31us; 43us; 15us; 31us; 43us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 2us; 31us; 43us; 1us; 31us; 1us; 32us; 14us; 32us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 32us; 14us; 32us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 32us; 1us; 33us; 1us; 33us; 14us; 33us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 2us; 34us; 45us; 2us; 34us; 45us; 15us; 34us; 45us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 2us; 34us; 45us; 2us; 34us; 45us; 1us; 34us; 1us; 34us; 1us; 36us; 2us; 37us; 38us; 2us; 37us; 38us; 2us; 37us; 38us; 2us; 37us; 38us; 1us; 37us; 1us; 39us; 1us; 40us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 14us; 42us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 42us; 1us; 42us; 1us; 43us; 1us; 44us; 14us; 44us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 44us; 14us; 44us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 44us; 1us; 45us; 1us; 45us; 6us; 46us; 49us; 54us; 55us; 73us; 76us; 5us; 46us; 49us; 54us; 55us; 76us; 1us; 47us; 2us; 47us; 70us; 1us; 48us; 1us; 49us; 14us; 49us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 2us; 50us; 72us; 1us; 50us; 1us; 50us; 1us; 50us; 1us; 51us; 14us; 51us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 52us; 14us; 52us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 1us; 53us; 1us; 54us; 1us; 55us; 14us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 13us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 14us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 14us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 76us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 79us; 80us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 2us; 70us; 73us; 1us; 70us; 1us; 71us; 2us; 71us; 76us; 1us; 72us; 1us; 73us; 2us; 73us; 76us; 1us; 73us; 2us; 74us; 75us; 2us; 74us; 76us; 1us; 75us; 1us; 76us; 1us; 76us; 1us; 78us; 1us; 80us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 125us; 127us; 130us; 132us; 147us; 149us; 151us; 155us; 159us; 176us; 180us; 183us; 185us; 188us; 191us; 207us; 210us; 212us; 215us; 217us; 219us; 221us; 236us; 238us; 240us; 243us; 246us; 262us; 265us; 281us; 284us; 300us; 303us; 305us; 307us; 322us; 324us; 339us; 341us; 343us; 345us; 360us; 362us; 364us; 366us; 368us; 371us; 374us; 390us; 393us; 396us; 398us; 400us; 402us; 405us; 408us; 411us; 414us; 416us; 418us; 420us; 422us; 424us; 426us; 428us; 443us; 445us; 447us; 449us; 451us; 466us; 468us; 483us; 485us; 487us; 489us; 496us; 502us; 504us; 507us; 509us; 511us; 526us; 529us; 531us; 533us; 535us; 537us; 552us; 554us; 569us; 571us; 573us; 575us; 590us; 605us; 620us; 635us; 650us; 665us; 680us; 695us; 710us; 725us; 740us; 755us; 769us; 784us; 799us; 815us; 817us; 819us; 821us; 823us; 825us; 827us; 829us; 831us; 833us; 835us; 837us; 839us; 841us; 843us; 846us; 848us; 850us; 853us; 855us; 857us; 860us; 862us; 865us; 868us; 870us; 872us; 874us; 876us; 878us; 880us; 882us; 884us; 886us; 888us; 890us; 892us; |]
let _fsyacc_action_rows = 195
let _fsyacc_actionTableElements = [|3us; 16386us; 29us; 194us; 32us; 193us; 37us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 29us; 194us; 32us; 193us; 37us; 23us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 24us; 14us; 46us; 12us; 3us; 32768us; 1us; 16us; 24us; 14us; 46us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 24us; 14us; 46us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 24us; 14us; 46us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 47us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 46us; 24us; 1us; 32768us; 1us; 25us; 2us; 16398us; 29us; 194us; 32us; 193us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 2us; 16398us; 29us; 194us; 32us; 193us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 2us; 32768us; 29us; 194us; 32us; 193us; 0us; 16401us; 21us; 16403us; 1us; 172us; 3us; 37us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 29us; 194us; 31us; 55us; 32us; 193us; 33us; 192us; 34us; 137us; 35us; 139us; 36us; 50us; 38us; 61us; 39us; 66us; 40us; 73us; 41us; 87us; 43us; 94us; 46us; 131us; 47us; 188us; 48us; 189us; 1us; 32768us; 4us; 39us; 0us; 16402us; 21us; 16403us; 1us; 172us; 3us; 37us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 29us; 194us; 31us; 55us; 32us; 193us; 33us; 192us; 34us; 137us; 35us; 139us; 36us; 50us; 38us; 61us; 39us; 66us; 40us; 73us; 41us; 87us; 43us; 94us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16404us; 1us; 32768us; 7us; 43us; 21us; 16403us; 1us; 172us; 3us; 37us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 29us; 194us; 31us; 55us; 32us; 193us; 33us; 192us; 34us; 137us; 35us; 139us; 36us; 50us; 38us; 61us; 39us; 66us; 40us; 73us; 41us; 87us; 43us; 94us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 30us; 59us; 0us; 16407us; 16us; 32768us; 7us; 49us; 11us; 82us; 12us; 117us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 0us; 16408us; 12us; 32768us; 1us; 172us; 7us; 51us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16409us; 14us; 32768us; 7us; 53us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 56us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 2us; 58us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 19us; 32768us; 1us; 172us; 3us; 37us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 31us; 55us; 33us; 192us; 34us; 137us; 35us; 139us; 36us; 50us; 38us; 61us; 39us; 66us; 40us; 73us; 41us; 87us; 43us; 94us; 46us; 131us; 47us; 188us; 48us; 189us; 19us; 32768us; 1us; 172us; 3us; 37us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 31us; 55us; 33us; 192us; 34us; 137us; 35us; 139us; 36us; 50us; 38us; 61us; 39us; 66us; 40us; 73us; 41us; 87us; 43us; 94us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16412us; 1us; 32768us; 1us; 62us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 2us; 64us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 19us; 32768us; 1us; 172us; 3us; 37us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 31us; 55us; 33us; 192us; 34us; 137us; 35us; 139us; 36us; 50us; 38us; 61us; 39us; 66us; 40us; 73us; 41us; 87us; 43us; 94us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16413us; 19us; 32768us; 1us; 172us; 3us; 37us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 31us; 55us; 33us; 192us; 34us; 137us; 35us; 139us; 36us; 50us; 38us; 61us; 39us; 66us; 40us; 73us; 41us; 87us; 43us; 94us; 46us; 131us; 47us; 188us; 48us; 189us; 1us; 32768us; 38us; 68us; 1us; 32768us; 1us; 69us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 2us; 71us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 1us; 32768us; 7us; 72us; 0us; 16414us; 1us; 32768us; 1us; 74us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 7us; 76us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 7us; 78us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 2us; 80us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 19us; 32768us; 1us; 172us; 3us; 37us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 31us; 55us; 33us; 192us; 34us; 137us; 35us; 139us; 36us; 50us; 38us; 61us; 39us; 66us; 40us; 73us; 41us; 87us; 43us; 94us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16415us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 11us; 84us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 7us; 86us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 0us; 16416us; 1us; 32768us; 1us; 88us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 2us; 90us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 1us; 32768us; 3us; 91us; 1us; 16419us; 42us; 102us; 1us; 32768us; 4us; 93us; 0us; 16417us; 1us; 32768us; 1us; 95us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 2us; 97us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 1us; 32768us; 39us; 98us; 19us; 32768us; 1us; 172us; 3us; 37us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 31us; 55us; 33us; 192us; 34us; 137us; 35us; 139us; 36us; 50us; 38us; 61us; 39us; 66us; 40us; 73us; 41us; 87us; 43us; 94us; 46us; 131us; 47us; 188us; 48us; 189us; 1us; 32768us; 44us; 100us; 0us; 16418us; 0us; 16420us; 1us; 32768us; 47us; 103us; 1us; 32768us; 11us; 104us; 19us; 32768us; 1us; 172us; 3us; 37us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 31us; 55us; 33us; 192us; 34us; 137us; 35us; 139us; 36us; 50us; 38us; 61us; 39us; 66us; 40us; 73us; 41us; 87us; 43us; 94us; 46us; 131us; 47us; 188us; 48us; 189us; 1us; 16422us; 42us; 102us; 0us; 16421us; 0us; 16423us; 0us; 16424us; 0us; 16425us; 1us; 32768us; 38us; 111us; 1us; 32768us; 1us; 112us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 2us; 114us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 1us; 32768us; 7us; 115us; 0us; 16426us; 0us; 16427us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 11us; 119us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 14us; 32768us; 7us; 121us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 0us; 16428us; 1us; 32768us; 44us; 123us; 0us; 16429us; 5us; 16430us; 2us; 179us; 5us; 183us; 9us; 129us; 27us; 140us; 28us; 141us; 4us; 16430us; 5us; 183us; 9us; 129us; 27us; 140us; 28us; 141us; 0us; 16431us; 1us; 16431us; 2us; 173us; 0us; 16432us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 13us; 16433us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 1us; 16456us; 1us; 132us; 11us; 16461us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 1us; 32768us; 2us; 134us; 0us; 16434us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16435us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 13us; 16436us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 3us; 16440us; 24us; 160us; 25us; 161us; 26us; 162us; 3us; 16441us; 24us; 160us; 25us; 161us; 26us; 162us; 0us; 16442us; 0us; 16443us; 0us; 16444us; 9us; 16445us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 9us; 16446us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 9us; 16447us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 9us; 16448us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 9us; 16449us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 9us; 16450us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 11us; 16451us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 13us; 32768us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 12us; 16452us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 14us; 32768us; 6us; 184us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 14us; 16463us; 8us; 186us; 14us; 170us; 15us; 169us; 16us; 163us; 17us; 164us; 18us; 165us; 19us; 166us; 20us; 167us; 21us; 168us; 22us; 158us; 23us; 159us; 24us; 160us; 25us; 161us; 26us; 162us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16453us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16454us; 3us; 32768us; 1us; 177us; 24us; 180us; 46us; 176us; 1us; 16455us; 5us; 183us; 0us; 16456us; 3us; 32768us; 1us; 177us; 24us; 180us; 46us; 176us; 2us; 32768us; 2us; 179us; 5us; 183us; 0us; 16457us; 8us; 32768us; 1us; 172us; 10us; 174us; 23us; 190us; 24us; 180us; 33us; 192us; 46us; 176us; 47us; 188us; 48us; 189us; 1us; 16458us; 5us; 183us; 0us; 16459us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16460us; 0us; 16462us; 11us; 32768us; 1us; 172us; 10us; 174us; 13us; 135us; 23us; 190us; 24us; 180us; 33us; 192us; 34us; 137us; 35us; 139us; 46us; 131us; 47us; 188us; 48us; 189us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 1us; 32768us; 47us; 191us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 21us; 25us; 27us; 28us; 30us; 34us; 36us; 40us; 43us; 44us; 47us; 48us; 50us; 51us; 53us; 55us; 58us; 60us; 62us; 63us; 66us; 68us; 70us; 71us; 72us; 74us; 77us; 78us; 100us; 102us; 103us; 125us; 126us; 128us; 150us; 151us; 152us; 154us; 155us; 172us; 173us; 186us; 187us; 202us; 203us; 204us; 206us; 218us; 233us; 253us; 273us; 274us; 276us; 288us; 303us; 323us; 324us; 344us; 346us; 348us; 360us; 375us; 377us; 378us; 380us; 392us; 407us; 419us; 434us; 446us; 461us; 481us; 482us; 494us; 509us; 521us; 536us; 537us; 539us; 551us; 566us; 568us; 570us; 572us; 573us; 575us; 587us; 602us; 604us; 624us; 626us; 627us; 628us; 630us; 632us; 652us; 654us; 655us; 656us; 657us; 658us; 660us; 662us; 674us; 689us; 691us; 692us; 693us; 705us; 720us; 732us; 747us; 748us; 750us; 751us; 757us; 762us; 763us; 765us; 766us; 778us; 792us; 794us; 806us; 808us; 809us; 821us; 822us; 834us; 848us; 849us; 850us; 851us; 855us; 859us; 860us; 861us; 862us; 872us; 882us; 892us; 902us; 912us; 922us; 934us; 948us; 961us; 976us; 991us; 1003us; 1015us; 1027us; 1039us; 1051us; 1063us; 1075us; 1087us; 1099us; 1111us; 1123us; 1135us; 1147us; 1148us; 1160us; 1161us; 1165us; 1167us; 1168us; 1172us; 1175us; 1176us; 1185us; 1187us; 1188us; 1200us; 1201us; 1202us; 1214us; 1215us; 1216us; 1217us; 1219us; 1220us; 1221us; 1222us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 9us; 6us; 7us; 7us; 0us; 1us; 5us; 4us; 7us; 5us; 5us; 7us; 9us; 6us; 7us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 22us; 23us; 23us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 16420us; 65535us; 65535us; 65535us; 65535us; 16421us; 16423us; 16424us; 16425us; 65535us; 65535us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 16429us; 65535us; 65535us; 16431us; 65535us; 16432us; 65535us; 65535us; 65535us; 65535us; 65535us; 16434us; 65535us; 65535us; 65535us; 65535us; 16437us; 16438us; 16439us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16453us; 65535us; 16454us; 65535us; 65535us; 16456us; 65535us; 65535us; 16457us; 65535us; 65535us; 16459us; 65535us; 16460us; 16462us; 65535us; 16464us; 16465us; 16466us; 65535us; 16467us; 16468us; 16469us; 16470us; |]
let _fsyacc_reductions ()  =    [| 
# 474 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 483 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "CPar.fsy"
                                                               Prog _1 
                   )
# 44 "CPar.fsy"
                 : Absyn.program));
# 494 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "CPar.fsy"
                                                               [] 
                   )
# 48 "CPar.fsy"
                 : 'gentype_Topdecs));
# 504 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 49 "CPar.fsy"
                 : 'gentype_Topdecs));
# 516 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 53 "CPar.fsy"
                 : 'gentype_Topdec));
# 527 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "CPar.fsy"
                                                               _1 
                   )
# 54 "CPar.fsy"
                 : 'gentype_Topdec));
# 538 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Vardec));
# 550 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 62 "CPar.fsy"
                 : 'gentype_Vardesc));
# 561 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 63 "CPar.fsy"
                 : 'gentype_Vardesc));
# 572 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "CPar.fsy"
                                                               _2                                      
                   )
# 64 "CPar.fsy"
                 : 'gentype_Vardesc));
# 583 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 65 "CPar.fsy"
                 : 'gentype_Vardesc));
# 594 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 66 "CPar.fsy"
                 : 'gentype_Vardesc));
# 606 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 70 "CPar.fsy"
                 : 'gentype_Fundec));
# 619 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 71 "CPar.fsy"
                 : 'gentype_Fundec));
# 633 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "CPar.fsy"
                                                               [] 
                   )
# 75 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 643 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "CPar.fsy"
                                                               _1 
                   )
# 76 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 654 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "CPar.fsy"
                                                               [_1]     
                   )
# 80 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 665 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 81 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 677 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "CPar.fsy"
                                                               Block _2 
                   )
# 85 "CPar.fsy"
                 : 'gentype_Block));
# 688 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "CPar.fsy"
                                                               [] 
                   )
# 89 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 698 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 90 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 710 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 91 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 722 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CPar.fsy"
                                                               _1 
                   )
# 95 "CPar.fsy"
                 : 'gentype_Stmt));
# 733 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               _1 
                   )
# 96 "CPar.fsy"
                 : 'gentype_Stmt));
# 744 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 100 "CPar.fsy"
                 : 'gentype_StmtM));
# 755 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               Return None          
                   )
# 101 "CPar.fsy"
                 : 'gentype_StmtM));
# 765 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 102 "CPar.fsy"
                 : 'gentype_StmtM));
# 776 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               _1                   
                   )
# 103 "CPar.fsy"
                 : 'gentype_StmtM));
# 787 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 104 "CPar.fsy"
                 : 'gentype_StmtM));
# 800 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 105 "CPar.fsy"
                 : 'gentype_StmtM));
# 812 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 106 "CPar.fsy"
                 : 'gentype_StmtM));
# 824 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                                         For(_3, _5, _7, _9)  
                   )
# 107 "CPar.fsy"
                 : 'gentype_StmtM));
# 838 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                                Three(_1,_3,_5) 
                   )
# 108 "CPar.fsy"
                 : 'gentype_StmtM));
# 851 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_SwitchStmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                                              Switch(_3,_6) 
                   )
# 109 "CPar.fsy"
                 : 'gentype_StmtM));
# 863 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                                Until(_3,_6) 
                   )
# 110 "CPar.fsy"
                 : 'gentype_StmtM));
# 875 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                                [] 
                   )
# 115 "CPar.fsy"
                 : 'gentype_SwitchStmt));
# 885 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_SwitchStmt1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                                _1 
                   )
# 116 "CPar.fsy"
                 : 'gentype_SwitchStmt));
# 896 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            let _4 = parseState.GetInput(4) :?> 'gentype_Stmt in
            let _5 = parseState.GetInput(5) :?> 'gentype_SwitchStmt1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                                 (_2,_4)::_5 
                   )
# 120 "CPar.fsy"
                 : 'gentype_SwitchStmt1));
# 909 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            let _4 = parseState.GetInput(4) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                                 [(_2,_4)] 
                   )
# 121 "CPar.fsy"
                 : 'gentype_SwitchStmt1));
# 921 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 125 "CPar.fsy"
                 : 'gentype_StmtU));
# 934 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 126 "CPar.fsy"
                 : 'gentype_StmtU));
# 946 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 127 "CPar.fsy"
                 : 'gentype_StmtU));
# 958 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtU in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 128 "CPar.fsy"
                 : 'gentype_StmtU));
# 970 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                                         For(_3, _5, _7, _9)  
                   )
# 129 "CPar.fsy"
                 : 'gentype_StmtU));
# 984 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                             Three(_1,_3,_5) 
                   )
# 130 "CPar.fsy"
                 : 'gentype_StmtU));
# 997 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                                Until(_3,_6) 
                   )
# 131 "CPar.fsy"
                 : 'gentype_StmtU));
# 1009 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Access _1           
                   )
# 135 "CPar.fsy"
                 : 'gentype_Expr));
# 1020 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               _1                  
                   )
# 136 "CPar.fsy"
                 : 'gentype_Expr));
# 1031 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               _1                  
                   )
# 140 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1042 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 141 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1054 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 142 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1066 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 143 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1077 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 144 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1088 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 145 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1098 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               PlusOne(_1) 
                   )
# 146 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1109 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               SubOne(_1) 
                   )
# 147 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1120 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 148 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1132 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 149 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1144 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 150 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1156 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 151 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1168 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 152 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1180 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 153 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1192 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 154 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1204 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 155 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1216 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 156 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1228 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 157 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1240 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 158 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1252 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 159 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1264 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 160 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1276 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               CstI _1             
                   )
# 164 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1287 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               _2                  
                   )
# 165 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1298 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Addr _2             
                   )
# 166 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1309 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               AccVar _1           
                   )
# 170 "CPar.fsy"
                 : 'gentype_Access));
# 1320 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               _2                  
                   )
# 171 "CPar.fsy"
                 : 'gentype_Access));
# 1331 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 172 "CPar.fsy"
                 : 'gentype_Access));
# 1342 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 173 "CPar.fsy"
                 : 'gentype_Access));
# 1353 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 174 "CPar.fsy"
                 : 'gentype_Access));
# 1365 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               []       
                   )
# 178 "CPar.fsy"
                 : 'gentype_Exprs));
# 1375 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               _1       
                   )
# 179 "CPar.fsy"
                 : 'gentype_Exprs));
# 1386 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               [_1]     
                   )
# 183 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1397 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 184 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1409 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               _1       
                   )
# 188 "CPar.fsy"
                 : 'gentype_Const));
# 1420 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               _1       
                   )
# 189 "CPar.fsy"
                 : 'gentype_Const));
# 1431 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               - _2     
                   )
# 190 "CPar.fsy"
                 : 'gentype_Const));
# 1442 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               -1       
                   )
# 191 "CPar.fsy"
                 : 'gentype_Const));
# 1452 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               TypI     
                   )
# 195 "CPar.fsy"
                 : 'gentype_Type));
# 1462 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               TypC     
                   )
# 196 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1473 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 52;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
